require 'axlsx'

wb = xlsx_package.workbook

colors = {'vGood'  => '24a83f', 'good'  => '26ec49', 'avg'  => 'ffdd00', 'poor'  => 'ffaa00', 'vPoor'  => 'ff3300'}

wb.add_worksheet(name: "#{l(:label_advanced)} - #{@report_title}") do |sheet|
  if @statuses.empty? or @rows.empty? or @data.empty?
    sheet.add_row [l(:label_no_data)]
  else

    #inicializo
    total_issues =
      if tab_is_project?
        aggregate(@data, {'project_id' => @project.id})
      else
        aggregate(@data, {})
      end
    total_column = []

    header_style_alt = sheet.styles.add_style(:bg_color => "DDDDDD", :fg_color => "000000", :alignment => {:vertical => :center, :horizontal => :center}, :b => true, :border => { :style => :thin, :color => "FFCF00" })
    bold_style = sheet.styles.add_style(:b => true, :border => { :style => :thin, :color => "FFCF00" })
    border_style = sheet.styles.add_style(:border => { :style => :thin, :color => "FFCF00" })

    #lleno los totales por direccion
    for status in @statuses
      total_column[status.id] = aggregate @data, {"status_id" => status.id }
    end

    #se anaden los encabezados a la primera fila
    row_head = []
    row_head << @report_title
    for status in @statuses
      if total_column[status.id] > 0
        row_head << status.name
      end
    end

    row_head << l(:label_total)
    row_head << l(:label_delayed)
    row_head << l(:label_weight)
    row_head << l(:label_advanced_porcent)
    row_head << l(:label_delayed_porcent)

    #se define el tamano para cada columna
    sheet.add_row row_head, :widths => [30] + ([10] * (row_head.count - 1)), :style => header_style_alt

    #se anaden las direcciones con sus respectivos valores
    for row in @rows
      total_row = aggregate(@data, { @field => row.id })
      total_delayed_row = aggregate(@data_delay, { @field => row.id })
      total_closed = aggregate(@data, { @field => row.id, "closed" => 1 })
      weight = (total_row.to_f/total_issues*100).round(2) rescue '-'
      advanced_porcent = (total_closed.to_f/total_row*100).round(2) rescue '-'
      delayed_porcent = (total_delayed_row.to_f/total_row*100).round(2) rescue '-'

      row_direction = []
      row_direction << row.name
      for status in @statuses
        if total_column[status.id] > 0
          row_direction << aggregate(@data, { @field => row.id, "status_id" => status.id })
        end
      end
      row_direction << (aggregate @data, { @field => row.id })
      row_direction << (aggregate @data_delay, { @field => row.id })
      row_direction << ((weight.is_a? Numeric) && !weight.to_f.nan? && weight >= 0 ? weight : '-') rescue '-'
      row_direction << ((advanced_porcent.is_a? Numeric) && !advanced_porcent.to_f.nan? && advanced_porcent >= 0 ? advanced_porcent : '-') rescue '-'
      row_direction << ((delayed_porcent.is_a? Numeric) && !delayed_porcent.to_f.nan? && delayed_porcent >= 0 ? delayed_porcent : '-') rescue '-'

      sheet.add_row row_direction, :style => (tab_is_project? && row.id == @project.id ? bold_style : border_style)

      #se añaden los colores a las columnas de % y negrita a la columna de direcciones
      sheet.rows.last.cells[0].style = bold_style
      sheet.rows.last.cells[-1].style = sheet.styles.add_style(:bg_color => colors[get_color_class(row_direction[-1], true)],:border => { :style => :thin, :color => "FFCF00" },:b => (tab_is_project? && row.id == @project.id))
      sheet.rows.last.cells[-2].style = sheet.styles.add_style(:bg_color => colors[get_color_class(row_direction[-2])],:border => { :style => :thin, :color => "FFCF00" },:b => (tab_is_project? && row.id == @project.id))
    end

  if @field != "project_id"
    #se anade la linea de totales con sus respectivos valores
    row_totals = []
    total_closed = aggregate @data, {  "closed" => 1 }
    total_row = aggregate @data, {}
    total_row_delay = aggregate @data_delay, {}
    advanced_porcent = (total_closed.to_f/total_row*100).round(2) rescue '-'
    delayed_porcent = (total_row_delay.to_f/total_row*100).round(2) rescue '-'

    row_totals << l(:label_total)

    for status in @statuses
      if total_column[status.id] > 0
        row_totals << (total_column[status.id])
      end
    end

    row_totals << total_row
    row_totals << total_row_delay
    row_totals << 100
    row_totals << ((advanced_porcent.is_a? Numeric) && !advanced_porcent.to_f.nan? && advanced_porcent >= 0 ? advanced_porcent : '-') rescue '-'
    row_totals << ((delayed_porcent.is_a? Numeric) && !delayed_porcent.to_f.nan? && delayed_porcent >= 0 ? delayed_porcent : '-') rescue '-'


    #se añaden los colores a las columnas de % y negrita a la fila de total
    sheet.add_row row_totals, :style => bold_style
    sheet.rows.last.cells[-1].style = sheet.styles.add_style(:bg_color => colors[get_color_class(row_totals[-1], true)], :b => true, :border => { :style => :thin, :color => "FFCF00" })
    sheet.rows.last.cells[-2].style = sheet.styles.add_style(:bg_color => colors[get_color_class(row_totals[-2])], :b => true, :border => { :style => :thin, :color => "FFCF00" })
  end

  end

end